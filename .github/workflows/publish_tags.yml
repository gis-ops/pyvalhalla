name: Publish wheels

on:
  push:
    branches-ignore:
      - '*'
    tags:
      - '*'

jobs:
  build_wheels:
    name: Wheels - cp*, ${{ matrix.platform }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - image: ubuntu-latest
            platform: linux
          - image: windows-latest
            platform: windows
          - image: macos-latest
            platform: macos
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    # keep in-sync with the other yaml
    - name: Cache Conan (MacOS)
      id: cache-conan
      uses: actions/cache@v3
      if: matrix.platform != 'windows'
      with:
        path: |
          ${{ github.workspace }}/conan_data
          ${{ github.workspace }}/conan_build
        key: conan-${{ matrix.platform }}-${{ hashFiles('conanfile.txt') }}
        restore-keys: |
          conan-${{ matrix.platform }}-

    - name: Install Conan (Windows)
      if: matrix.platform == 'windows'  # && steps.cache-conan.outputs.cache-hit != 'true'
      run: |
        pip install pip --upgrade
        pip install conan<2.0.0
        conan profile new default --detect
        conan profile update "settings.compiler=Visual Studio" default
        conan profile update "settings.compiler.version=16" default
        conan config set "storage.path=$env:GITHUB_WORKSPACE/conan_data"
        conan install --install-folder conan_build --remote conancenter .

    - name: Install Conan (MacOS)
      if: matrix.platform == 'macos' && steps.cache-conan.outputs.cache-hit != 'true'
      run: |
        pip install pip --upgrade
        pip install conan<2.0.0
        conan profile new default --detect
        conan config set "storage.path=${{ github.workspace }}/conan_data"
        conan install --install-folder ${{ github.workspace }}/conan_build --remote conancenter .

    - uses: pypa/cibuildwheel@v2.3.1
      env:
        MACOSX_DEPLOYMENT_TARGET: 10.15

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl

  upload_all:
    name: Upload if release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [build_wheels]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v3

    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.8.5
      with:
        user: nilsnolde
        password: ${{ secrets.PYPI_PASS }}
