[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm>=6.2",
    "setuptools_scm_git_archive",
    "pybind11>=2.10.4",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "valhalla/__version__.py"
write_to_template = "__version__ = '{version}'\n"
version_scheme = "post-release"

[tool.black]
line-length = 105
exclude = '''
/(
    \\..*
  | dist
  | wheelhouse
  | '*build'
  | __pycache__
  | '*.toml'

)/
'''

[tool.cibuildwheel]
test-command = "python -m unittest discover -s {project}/test"
# find out current defaults: cibuildwheel --print-build-identifiers --platform linux
build = "cp*"
skip = "*musllinux*"
archs = "native"
manylinux-x86_64-image = "ghcr.io/gis-ops/manylinux:2_28_valhalla_python"

[tool.cibuildwheel.windows]
before-all = "pip install conan delvewheel"
repair-wheel-command = "delvewheel repair --add-path lib/windows {wheel} -w {dest_dir}"

[tool.cibuildwheel.linux]
before-all = """
pip install "conan<2.0.0"
conan profile new default --detect
conan config set storage.path={package}/conan_data
conan install --install-folder {package}/conan_build --remote conancenter {package}/conanfile.txt
"""

[tool.cibuildwheel.macos]
environment = { LIBRARY_PATH="$(pwd)/lib/darwin/:$LIBRARY_PATH" }
repair-wheel-command = [
    'DYLD_LIBRARY_PATH=$LIBRARY_PATH delocate-listdeps {wheel}',
    'DYLD_LIBRARY_PATH=$LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}'
]
